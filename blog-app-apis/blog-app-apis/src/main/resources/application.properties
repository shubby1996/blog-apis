server.port = 8090

#db_config
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/blog_app_apis
spring.datasource.username = root
spring.datasource.password = root

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL55Dialect

#org.hibernate.dialect.MySQL55Dialect
#org.hibernate.spatial.dialect.mysql.MySQLSpatial56Dialect
#(org.hibernate.dialect.MySQL5Dialect)



#create, update, create-drop, validate 

#####################very important step #######################
#Did you try running it with:
#
#spring.jpa.generate-ddl=true
#and then
#
#spring.jpa.hibernate.ddl-auto = create
#By default the DDL execution (or validation) is deferred until the ApplicationContext has started. There is also a spring.jpa.generate-ddl flag, but it is not used if Hibernate autoconfig is active because the ddl-auto settings are more fine-grained.
#

spring.jpa.generate-ddl=true
sring.jpa.hibernate.ddl-auto = update
spring.jpa.show_sql=true
#spring.jpa.properties.hibernate.check_nullability=true
#spring.jpa.properties.hibernate.format_sql=true
spring.jpa.format=true		

##################################################################    file related configuration  ############################

spring.servlet.multipart.max-file-size = 10MB
   
spring.servlet.multipart.max-request-size =10MB

project.image = images

############################################################# spring security #################################################

logging.level.org.springframework.security = DEBUG

############ removing these properties so as to authenticate using database ###########################################
##spring.security.user.name = shubham
##spring.security.user.password = shubham
##spring.security.user.role = ADMIN



